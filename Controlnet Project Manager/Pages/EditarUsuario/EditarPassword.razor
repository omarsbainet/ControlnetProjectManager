@page "/account/manage/password"
@using Areas.Identity.Data
@using Data
@layout EmptyLayout
@inject CRUD crud
@inject UserManager<CPMUser> usermanager
@inject ApplicationDbContext _ApplicationDbContext
@inject IDialogService _dialogService
@inject MyCustomTheme tema;
<style>
    .color {
        background-color: @tema.Theme.Palette.Background;
    }

    .boton {
        color: white;
        border-radius: 5px;
        background-color: @tema.Theme.Palette.Primary;
        text-align: left;
    }
</style>



<MudPaper Width="45%" Class="d-flex flex-column ms-5 color gap-3" Elevation="0">
    <MudText Typo="Typo.h5"><b>Cambiar contraseña</b></MudText>
    <MudTextField @bind-Value="passwordOriginal" Label="Contraseña actual" Variant="Variant.Filled" FullWidth="false" InputType="InputType.Password"></MudTextField>
    <MudTextField @bind-Value="password1" Label="Nueva contraseña" Variant="Variant.Filled" FullWidth="false" InputType="InputType.Password"></MudTextField>
    <MudTextField @bind-Value="password2" Label="Confirma nueva contraseña" Variant="Variant.Filled" FullWidth="false" InputType="InputType.Password"></MudTextField>
    <MudButton Class="boton" FullWidth="true" OnClick="@(()=>ActualizarUsuario())">Guardar cambios</MudButton>
</MudPaper>

@code {
    string passwordOriginal = "";
    string password1 = "";
    string password2 = "";
    [Inject] private IDialogService DialogService { get; set; }
    [Inject] AuthenticationStateProvider auth { get; set; }
    CPMUser user;
    protected override async Task OnInitializedAsync()
    {
        var iduser = usermanager.GetUserId((await auth.GetAuthenticationStateAsync()).User);
        user = _ApplicationDbContext.Users.FirstOrDefault(it => it.Id == iduser);

    }
    private async Task ActualizarUsuario()
    {

        if (user != null)

        {
            if(password1 == password2 && password1 != "" && passwordOriginal != "")
            {
                var cambioContraseña = await usermanager.ChangePasswordAsync(user, passwordOriginal, password1);
                Console.WriteLine(cambioContraseña.Succeeded);
                if (!cambioContraseña.Succeeded)
                {
                    await DialogService.ShowMessageBox("Error", $"{cambioContraseña.Errors.ToArray()[0].Description}");
                    return;
                }
                else
                {
                    await DialogService.ShowMessageBox("Completado", $"Contraseña cambiada con exito");
                    
                }
            }
            
            
            _ApplicationDbContext.SaveChanges();
            

        }
        else
        {
            await DialogService.ShowMessageBox("Error", $"No se pudo actualizar el usuario {user.UserName}");
            return;
        }
    }
}